# Лекциите започват от 2!

* 2. Въведение в системите за управление на бази от данни
** Данни и информация
   - Данни: стойностите, които се съхраняват в базата данни (конкретни факти)
   - Информация: данни, обработени така, че да бъдат смислени и полезни на потребителя
   - ЗА ИЗПИТ: Данните са това, което съхраняваме, информацията е това, което извличаме
** Данни
   - data modeling (концептуално)
   - data modeling (физически)
   - database
   - data warehouse
** Системи за работа с файлове
   - записват данните в отделни файлове
*** недостатъци
    - данните често се дублират
    - зависимост на данните
    - данните са разделени и съответно изолирани
    - трудно е да се представят сложни обекти
** Предимства на СУБД
   - излишеството на данни може да бъде намалено (дублирането е намалено)
   - неконсистентността на данните може да бъде избегната
   - данните могат да бъдат споделени
   - могат да бъдат наложени стандарти
   - могат да бъдат наложени ограничения с цел сигурност
   - данните са интегрирани
** Основни понятия
   - база данни: комп. система за регистриране и поддържане на логически свързани
     структури от данни
   - БД съдържа: оперативни данни и данни, които описват оперативните (речник,
     каталог, метаданни)
   - потребителите на БД могат да добавят, променят, извличат и трият данни
** Компоненти на една система за управление на база данни
   - хардуер
   - софтуер
   - данни
   - процедури
   - потребители: крайни потребители, приложни програмисти, администратори
** Видове данни
   - оперативни данни
   - входни данни
   - изходни данни
** Независимост на данните
   По-старите системи в повечето случаи са зависими от данните.
   Всяка промяна в структурата на съхранение на данните афектира приложението.
** Видове бази данни
   - Операционни (транзакционни)
   - Аналитични
   - Хибридни
* 3. Архитектура на СУБД
** Три нива на архитектура
   - външно
   - концептуално
   - вътрешно
** Външно ниво
   - най-високо ниво на абстракция
   - най-близо до потребителите
   - занимава се предимно с индивидуалните гледни точки на потребителите
** Концептуално ниво
   - схемата му представя структурата на цялата база данни
   - скрива детайлите относно физическото съхранение на данните
   - концентрира се в/у обектите, връзките, типовете данни, ограниченията
** Вътрешно ниво
   - представя на ниско ниво цялата база данни
   - има вътр. схема, която описва физическата структура на съхраняване на данните
   - най-близо до физическата памет
** Кореспондеции (mappings)
   - кореспонденциите м/у вътрешното и концептуално ниво определят как данните
     на концептуално ниво се представят на физическото
   - кореспонденциите м/у външното и концептуално ниво определят начина на
     представяне на данните от потребителска гледна точка
** Администратор на БД
   - контрол на достъпа до БД
   - увеличаване на хардуерните и софтуерни ресурси при нужда
   - архивиране и възстановяване
   - определя структурата за съхраняване на данните в паметта
** СУБД
*** Управление на речника за данни
    - СУБД съхранява данни за всички обекти, които са създадени в нея
    - предоставя ниво на абстракция, правейки приложенията независими от
      структурата на съхранение на данните
*** Сигурност и интегритет на данните
    - СУБД трябва да следи правата на потребителите за достъп до обектите в нея
    - СУБД може да отхвърля потребителски команди
*** Контрол на едновременния достъп
    - СУБД позволява едновременен достъп на множество потребители до едни и същи
      данни
*** Архивиране и възстановяване
*** Управление на интегритета на данните
*** Езици за достъп до СУБД, API и комуникационни интерфейси
*** Ефективност
** Модели СУБД
   - файлови системи
   - електронни таблици
   - йерархичен модел
   - мрежов модел
   - релационен модел
   - обектен модел
   - обектно-релационен модел
   - XML
   - Други: NoSQL, Deductive, Dimensional
** Релационни системи
   - данните се съхраняват в двумерни таблици, наречени релации
** Клиент/Сървър архитектура
* 4. Обща характеристика на релационните СУБД
Основата на модерните технологии за БД безспорно е релационният модел.
** Правила на Код за оценяване на релационна система
   - правило за информацията
   - гарантиран достъп
   - систематична поддръжка на нулеви стойности
   - активен онлайн релационен каталог
   - пълен подезик за данните
   - правила за обновяване на изгледите
   - вмъкване, обновяване и изтриване на ниво множество
   - физическа независимост на данните
   - логическа независимост на данните
   - независимост на цялостността на данните
   - независимост на разпределението
   - невъзможност за намеса
   - zero rule
** Релационен модел на данните
   - използва колекция от таблици
   - таблиците са логически структури, поддържани от мениджъра на базата данни
** Части на релационния модел
   - структурна част
   - правила за цялостност на данните
   - манипулативна част
** Изводи
   - резултатът от join на две таблици е нова таблица
   - това свойство се нарича затвореност
   - таблиците са логически структури, не физически
   - всички стойности са атомарни
* 5. Области (домейни)
Най-малката семантична единиц данни в релационния модел е индивидуална стойност
на данни - напр. ISBN номер на книга.
** Област - именувано множество от скаларни стойности, всички от един и същ тип
   - областта е множеството от всички възможни стойности, които дадени атрибути
     могат да имат
   - областите са един вид пулоев от стойности, от които се вземат актуалните
     стойности на атрибутите
   - областите са от концептуално естество
** Съставни области
   - една съставна област е дефинирана като Декартово произведение на множество
     от прости области
* 6. Релации
** Определения
   - релационна променлива: променлива в смисъла на езиците за програмиране;
     именуван обект, стойността на който се променя във времето
   - една релация се състои от заглавна част и тяло
   - заглавна част: състои се от фиксирано множество от атрибути, които са под-
     редени двойки във вид: (атрибут:домейн)
   - тяло: състои се от множество от n-торки (наредени множества)
     - всяка n-торка се състои от едно множество от двойки във вид:
       (име_атрибут:стойност_атрибут)
** Свойства на релациите
   - няма дублирани записи: релацията не може да съдържа дублиращи се n-торки
   - записите са неподредени (top to bottom)
   - атрибутите са неподредени
   - всички стойности на атрибутите са атомарни
** Видове релации
   - именувани релации
   - дериватни релации
   - базови релации
   - views (гледни точки)
   - snapshots (моментни снимки)
   - query results (резултати от въпроси, запитвания)
* 7. Концепция за ключове
Това е компонентът на релационния модел, който през последните години е най-много
променян.
** Въведение
   - дефиницията за БД трябва да включва правила за цялостност
   - релационният модел включва два типа общовалидни правила за цялостност:
     - концепцията за първични ключове
     - концепцията за външни ключове
** Концепция за ключове
   - ключ е атрибут или група от атрибути, който се използва за идентификация на
     n-торка (ред) в релация
*** Неформални определения
    1. Суперключ
    2. Кандидат-ключ
    3. Първичен ключ
    4. Външен ключ
* 8. Външни ключове
** Свойства
   - ВК са също множества от атрибути
   - един ВК може да бъде съставен само ако кореспондиращият КК е също съставен
   - ако КК е прост - ВК също ще е прост
   - ВК трябва да е стойност, която се появява като стойност на съответния КК
** Изтриване на ВК
   - RESTRICTED - операцията е ограничена само за случая, когато няма свързани
     данни; ако има такива, изтриване не се извършва
   - CASCADES - операцията се разширява каскадно и изтрива също така и свърза-
     ните записи
** Промяна на ВК
   - RESTRICTED - операцията е ограничена само за случая, когато няма свързани
     данни; ако има такива, промяна не се извършва
   - CASCADES - операцията се разширява каскадно и променя също така и свърза-
     ните записи   
* 9. Нулеви стойности
Нулева стойност: липса на стойност (данни).
** Правило за цялостност на обект
   - не се разрешава на нито един от компонентите на ПК да приема нулеви стойности
** Забележки
   - в една релационна БД ние не трябва да записваме информация, която не можем
     да идентифицираме
   - правилото по-горе важи само за базови релации
   - правилото се прилага само за ПК - АК могат да имат NULL стойности, но тези,
     които имат, не могат да бъдат избирани за ПК
** ВК и NULL
   - външните ключове също могат да приемат нулеви стойности
   - NULLIFIES
     - при изтриване на ред от целевата релация, който се референцира, ВК
       получава стойност NULL
     - същото важи и за промяната
** Релационен интегритет - обобщение
Интегритетът на данните предоставя механизъм за поддържане на консистентността
на данните за операциите INSERT, UPDATE и DELETE.
*** Друг тип ограничения за интегритет на данните са:
    - цялостност на обект
    - поддръжка на нулеви стойности
    - ограничения, свързани с областите
    - референциален интегритет
* 10. Релационна алгебра
Третата и последна част на релационния модел (манипулативната част) се състои от
множество от оператори, които образуват т. нар. релационна алгебра. Всеки оператор
от релационната алгебра има една или две релации като входни данни и връща като ре-
зултат една нова релация. Codd дефинира 8 операции, разделени в две групи:
   - множество на традиционните (класическите) операции;
   - специални релационни опрации.
** Затвореност
   Резултатът на всяка релационна операция е друга релация - това свойство се
   нарича релационна затвореност.
   - всеки изход от една операция може да бъде вход на друга операция
   - затвореността има два аспекта:
     - затвореност на заглавните части на релациите
     - затвореност на телата на релациите
   - релациите, които са резултат от някаква релационна операция, също имат
     заглавна част
* 11. Релационен език
* 12. Функционални зависимости
* 13. Теория на нормализацията
* 14. Конкурентност
* 15. Възстановяване
* 16. Сигурност
